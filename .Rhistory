classify <- function(shipcode) {
ifelse(shipcode %in% c(70, 80, 1003, 1004, 1016), 'Cargo',   # Cargo
ifelse(shipcode %in% c(30, 1001, 1002), 'Fishing',           # Fishing
ifelse(shipcode %in% c(35, 1021), 'Military',                # Military
ifelse(shipcode %in% c(0), 'Not_available',                 # Not available
ifelse(shipcode %in% c(60:69, 1012:1015), 'Passenger',           # Passenger
ifelse(shipcode %in% c(36, 37, 1019), 'Pleasure',               # Pleasure Craft/Sailing
ifelse(shipcode %in% c(80:90, 1017, 1024), 'Tanker',          # Tanker
ifelse(shipcode %in% c(21, 22, 31, 32, 52, 1023, 1025), 'Tugboat', 'Others'))))))))  # Tug Tow # Others
}
classify(30)
devtools::load_all(".")
rm(list = c("classify"))
devtools::load_all(".")
?classify
devtools::load_all(".")
?classify
devtools::load_all(".")
?classify
devtools::load_all(".")
?classify
devtools::load_all(".")
?classify
classify(70)
classify(shipcode=70)
classify(shipcod=70)
classify(shi=69)
devtools::load_all(".")
?classify
devtools::load_all(".")
?classify
Summarizeship <- function(AISdata, maxLON=180, minLON=-180, maxLAT= 90,minLAT= -90) {
# build new column and specify ship types
AISdata['shiptype'] <- 0
#extract VesselType code to define its shiptype
#source('R/ClassifyShip.R')
AISdata['shiptype'] <- classify(AISdata$VesselType)
###############################################################
# Specific study area
AISdata <- AISdata[AISdata$LON > minLON & AISdata$LON < maxLON
& AISdata$LAT > minLAT & AISdata$LAT < maxLAT, ]
# Get unique vessel info
AISdata <- unique(AISdata[, c("MMSI", "shiptype", "Length", "Width")])
###############################################################
# summary statistics:   ship type vs number
# Create a table of counts for each combination of MMSI and shiptype
ship_type_counts <- table(AISdata$shiptype)  # get type and counts
# Convert the table to a data frame for better readability
ship_summary <- as.data.frame(ship_type_counts)
names(ship_summary) <- c("shiptype", "number")
####################################################################################
# get average ship length and width to add on the info matrix "ship_summary"
for (i in 1:nrow(ship_summary)){
ship_type <- ship_summary[i, 'shiptype']
avg_length <- mean(AISdata$Length[  # take the avg of length for a certain shiptype
AISdata$shiptype == ship_type             # ship type
& AISdata$Length > 0
& !is.na(AISdata$Length)]             # exclude 0 and missing data
)
avg_width <- mean(AISdata$Width[  # take the avg of width for a certain shiptype
AISdata$shiptype == ship_type             # ship type
& AISdata$Width > 0
& !is.na(AISdata$Width)]             # exclude 0 and missing data
)
ship_summary[i, 'length(meters)'] <- avg_length
ship_summary[i, 'width(meters)'] <- avg_width
}
return(ship_summary)
}
devtools::load_all(".")
AISdata <- read.csv("test.csv", header = T)
Summarizeship(AISdata)
max(AISdata$LAT)
min(AISdata$LAT)
devtools::load_all(".")
rm(list = c("Summarizeship"))
devtools::load_all(".")
?VesselSummaryAIS
?ShipSummaryStat
?Summarizeship
devtools::load_all(".")
?Summarizeship
plotvessel <- function(AISdata, studyship == 'Cargo', maxLON = -90, minLON = -110, maxLAT = 30, minLAT = 20){
plotvessel <- function(AISdata, studyship = 'Cargo', maxLON = -90, minLON = -110, maxLAT = 30, minLAT = 20){
# Filtering: Specific study area
AISdata <- AISdata[AISdata$LON > minLON & AISdata$LON < maxLON
& AISdata$LAT > minLAT & AISdata$LAT < maxLAT, ]
# Filtering: Build new column and specify ship types
AISdata['shiptype'] <- 0
source('ClassifyShip.R')
AISdata['shiptype'] <- classify(AISdata$VesselType)
AISdata <- AISdata[ area_AISdata$shiptype == studyship, ] # AIS data extraction for the certain type
# Mapping using mapview package##############################
lng = ship_area_AISdata$LON
lat = ship_area_AISdata$LAT
name = sprintf("shiptype %d", type_index) # legend name
# Create a data frame with the point data
points_df = data.frame(lng, lat, name)
# Convert the data frame to a spatial points data frame
ship_signal_location = sf::st_as_sf(points_df,
coords = c("lng", "lat"), crs = 4326)
# Plot the points on a map
mapview::mapview(ship_signal_location)
return (mapview::mapview(ship_signal_location)
}
plotvessel <- function(AISdata, studyship = 'Cargo', maxLON = -90, minLON = -110, maxLAT = 30, minLAT = 20){
# Filtering: Specific study area
AISdata <- AISdata[AISdata$LON > minLON & AISdata$LON < maxLON
& AISdata$LAT > minLAT & AISdata$LAT < maxLAT, ]
# Filtering: Build new column and specify ship types
AISdata['shiptype'] <- 0
source('ClassifyShip.R')
AISdata['shiptype'] <- classify(AISdata$VesselType)
AISdata <- AISdata[ area_AISdata$shiptype == studyship, ] # AIS data extraction for the certain type
# Mapping using mapview package##############################
lng = ship_area_AISdata$LON
lat = ship_area_AISdata$LAT
name = sprintf("shiptype %d", type_index) # legend name
# Create a data frame with the point data
points_df = data.frame(lng, lat, name)
# Convert the data frame to a spatial points data frame
ship_signal_location = sf::st_as_sf(points_df,
coords = c("lng", "lat"), crs = 4326)
# Plot the points on a map
mapview::mapview(ship_signal_location)
}
plotvessel(AISdata)
AISdata <- read.csv("test.csv", header = T)
plotvessel(AISdata)
plotvessel <- function(AISdata, studyship = 'Cargo', maxLON = -90, minLON = -110, maxLAT = 30, minLAT = 20){
# Filtering: Specific study area
AISdata <- AISdata[AISdata$LON > minLON & AISdata$LON < maxLON
& AISdata$LAT > minLAT & AISdata$LAT < maxLAT, ]
# Filtering: Build new column and specify ship types
AISdata['shiptype'] <- 0
source('ClassifyShip.R')
AISdata['shiptype'] <- classify(AISdata$VesselType)
AISdata <- AISdata[ area_AISdata$shiptype == studyship, ] # AIS data extraction for the certain type
# Mapping using mapview package##############################
lng = ship_area_AISdata$LON
lat = ship_area_AISdata$LAT
name = sprintf("shiptype %d", type_index) # legend name
# Create a data frame with the point data
points_df = data.frame(lng, lat, name)
# Convert the data frame to a spatial points data frame
ship_signal_location = sf::st_as_sf(points_df,
coords = c("lng", "lat"), crs = 4326)
# Plot the points on a map
mapview::mapview(ship_signal_location)
}
devtools::load_all(".")
plotvessel(AISdata)
Summarizeship(AISdata)
devtools::load_all(".")
plotvessel(AISdata)
library(VesselSummaryAIS)
plotvessel(AISdata)
devtools::load_all(".")
plotvessel(AISdata)
library(VesselSummaryAIS)
plotvessel(AISdata)
devtools::load_all(".")
AISdata <- read.csv('test.csv', header = T)
plotvessel(AISdata)
devtools::load_all(".")
plotvessel(AISdata)
devtools::load_all(".")
plotvessel(AISdata)
devtools::load_all(".")
plotvessel(AISdata)
devtools::load_all(".")
plotvessel(AISdata)
map = plotvessel(AISdata)
show(map)
print(map)
devtools::load_all(".")
devtools::load_all(".")
plotvessel(AISdata, 'fishing')
devtools::load_all(".")
plotvessel(AISdata, 'fishing')
devtools::load_all(".")
?plotvessel
devtools::load_all(".")
speeddist(AISdata )
fig = speeddist(AISdata)
print(fig)
show(fig)
display(fig)
?hist
speeddist(AISdata, 'Others' )
speeddist(AISdata, 'Fishing' )
devtools::load_all(".")
plotvessel(AISdata, 'fishing')
plotvessel(AISdata, 'Fishing')
devtools::load_all(".")
plotvessel(AISdata, 'Fishing')
source("C:/Users/minci/STAT600/VesselSummaryAIS/R/PlotVessel.R")
devtools::load_all(".")
rm(list = c("plotvessel"))
devtools::load_all(".")
plotvessel(AISdata, 'Tug Tow')
plotvessel(AISdata, 'Tugboat')
plotvessel(AISdata, 'Tugboat')
devtools::load_all(".")
plotvessel(AISdata, 'Tugboat')
?hist
devtools::load_all(".")
devtools::load_all(".")
?speeddist
devtools::load_all(".")
operatingtime(AISdata)
devtools::load_all(".")
operatingtime(AISdata)
devtools::load_all(".")
operatingtime(AISdata)
devtools::load_all(".")
operatingtime(AISdata)
devtools::load_all(".")
?operatingtime
usethis::use_gpl3_license() # adds GPL-3
getAnywhere(soft)
getAnywhere(Summarizeship)
getAnywhere()
devtools::load_all(".")
usethis::use_package("stats", type = "Imports")
usethis::use_package("mapview", type = "Imports")
usethis::use_package("sf", type = "Imports")
